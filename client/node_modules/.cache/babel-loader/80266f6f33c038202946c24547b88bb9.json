{"ast":null,"code":"const API_URL = \"v1\";\n\nasync function httpGetPlanets() {\n  // TODO: Once API is ready.\n  // Load planets and return as JSON.\n  const response = await fetch(`${API_URL}/planets`);\n  return await response.json();\n} // Load launches, sort by flight number, and return as JSON.\n\n\nasync function httpGetLaunches() {\n  const response = await fetch(`${API_URL}/launches`);\n  const fetchedData = response.json();\n  return fetchedData.sort((a, b) => a.flightNumber - b.flightNumber);\n} // Submit given launch data to launch system.\n\n\nasync function httpSubmitLaunch(launch) {\n  try {\n    return await fetch(`${API_URL}/launches`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(launch)\n    });\n  } catch (err) {\n    return {\n      ok: false\n    };\n  }\n} // Delete launch with given ID.\n\n\nasync function httpAbortLaunch(id) {\n  try {\n    return await fetch(`${API_URL}/launches/${id}`, {\n      method: \"delete\"\n    });\n  } catch (err) {\n    console.log(err);\n    return {\n      ok: false\n    };\n  }\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };","map":{"version":3,"sources":["/home/lenovo/Node/Nasa-mission-control/client/src/hooks/requests.js"],"names":["API_URL","httpGetPlanets","response","fetch","json","httpGetLaunches","fetchedData","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","err","ok","httpAbortLaunch","id","console","log"],"mappings":"AAAA,MAAMA,OAAO,GAAG,IAAhB;;AAEA,eAAeC,cAAf,GAAgC;AAC9B;AACA;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,UAAZ,CAA5B;AACA,SAAO,MAAME,QAAQ,CAACE,IAAT,EAAb;AACD,C,CACD;;;AACA,eAAeC,eAAf,GAAiC;AAC/B,QAAMH,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,WAAZ,CAA5B;AACA,QAAMM,WAAW,GAAGJ,QAAQ,CAACE,IAAT,EAApB;AACA,SAAOE,WAAW,CAACC,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAA9C,CAAP;AACD,C,CAED;;;AACA,eAAeC,gBAAf,CAAgCC,MAAhC,EAAwC;AACtC,MAAI;AACF,WAAO,MAAMT,KAAK,CAAE,GAAEH,OAAQ,WAAZ,EAAwB;AACxCa,MAAAA,MAAM,EAAE,MADgC;AAExCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF+B;AAKxCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf;AALkC,KAAxB,CAAlB;AAOD,GARD,CAQE,OAAOM,GAAP,EAAY;AACZ,WAAO;AACLC,MAAAA,EAAE,EAAE;AADC,KAAP;AAGD;AACF,C,CACD;;;AACA,eAAeC,eAAf,CAA+BC,EAA/B,EAAmC;AACjC,MAAI;AACF,WAAO,MAAMlB,KAAK,CAAE,GAAEH,OAAQ,aAAYqB,EAAG,EAA3B,EAA8B;AAC9CR,MAAAA,MAAM,EAAE;AADsC,KAA9B,CAAlB;AAGD,GAJD,CAIE,OAAOK,GAAP,EAAY;AACZI,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACA,WAAO;AACLC,MAAAA,EAAE,EAAE;AADC,KAAP;AAGD;AACF;;AAED,SAASlB,cAAT,EAAyBI,eAAzB,EAA0CM,gBAA1C,EAA4DS,eAA5D","sourcesContent":["const API_URL = \"v1\";\n\nasync function httpGetPlanets() {\n  // TODO: Once API is ready.\n  // Load planets and return as JSON.\n  const response = await fetch(`${API_URL}/planets`);\n  return await response.json();\n}\n// Load launches, sort by flight number, and return as JSON.\nasync function httpGetLaunches() {\n  const response = await fetch(`${API_URL}/launches`);\n  const fetchedData = response.json();\n  return fetchedData.sort((a, b) => a.flightNumber - b.flightNumber);\n}\n\n// Submit given launch data to launch system.\nasync function httpSubmitLaunch(launch) {\n  try {\n    return await fetch(`${API_URL}/launches`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(launch),\n    });\n  } catch (err) {\n    return {\n      ok: false,\n    };\n  }\n}\n// Delete launch with given ID.\nasync function httpAbortLaunch(id) {\n  try {\n    return await fetch(`${API_URL}/launches/${id}`, {\n      method: \"delete\",\n    });\n  } catch (err) {\n    console.log(err);\n    return {\n      ok: false,\n    };\n  }\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };\n"]},"metadata":{},"sourceType":"module"}